import { useState } from 'react';
import { classNames } from 'shared/lib/classNames/classNames';
import { Button, ButtonTheme } from 'shared/ui/Button/Button';
import { ICircleCard, iconPosition } from 'widgets/CanHelpBlock/models/types';
import { CircleCard } from '../CircleCard/CircleCard';
import cls from './CanHelpBlock.module.scss';

interface CanHelpBlockProps {
    className?: string;
}

export const CanHelpBlock: React.FC<CanHelpBlockProps> = (props) => {
    const { className } = props;


    const [firstCircleCards] = useState<ICircleCard[]>([
        {
            id: 1,
            icon: "ü™ú",
            text: '–ö–∞—Ä—å–µ—Ä–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ',
            icon_position: iconPosition.LEFT
        },
        {
            id: 2,
            icon: "‚åõ",
            text: '–ü—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏—è',
            icon_position: iconPosition.LEFT
        },
        {
            id: 3,
            icon: "üòü",
            text: '–¢—Ä–µ–≤–æ–≥–∏, –ø–∞–Ω–∏—á–µ—Å–∫–∏–µ –∞—Ç–∞–∫–∏',
            icon_position: iconPosition.LEFT
        },
        {
            id: 4,
            icon: "üòë",
            text: '–í—ã–≥–æ—Ä–∞–Ω–∏–µ',
            icon_position: iconPosition.LEFT
        },
        {
            id: 5,
            icon: "‚ö†Ô∏è",
            text: '–¢—Ä—É–¥–Ω–æ—Å—Ç–∏ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö',
            icon_position: iconPosition.LEFT
        },
        {
            id: 6,
            icon: "ü•∫",
            text: '–ù–µ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–µ–±–µ',
            icon_position: iconPosition.RIGHT
        },
    ])

    const [scondCircleCards] = useState<ICircleCard[]>([
        {
            id: 1,
            icon: "‚≠ê",
            text: '–°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è',
            icon_position: iconPosition.RIGHT
        },
        {
            id: 2,
            icon: "üòû",
            text: '–î–µ–ø—Ä–µ—Å—Å–∏—è',
            icon_position: iconPosition.RIGHT
        },
        {
            id: 3,
            icon: "‚ùó",
            text: '–ü—Ä–æ–±–ª–µ–º–∞ —ç–º–ø–∞—Ç–∏–∏',
            icon_position: iconPosition.RIGHT
        },
        {
            id: 4,
            icon: "üîé",
            text: '–ü–æ–∏—Å–∫ —Å–µ–±—è',
            icon_position: iconPosition.RIGHT
        },
        {
            id: 5,
            icon: "üò¥",
            text: '–•—Ä–æ–Ω–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–ª–æ—Å—Ç—å',
            icon_position: iconPosition.RIGHT
        },
    ])

    return (
        <div className={classNames(cls.canHelpBlock, {}, [className ?? '' ])}>
            <div className="container">
                <div className={cls.content}>

                    <h2 className={cls.title}>–° —á–µ–º –º–æ–∂–µ–º –ø–æ–º–æ—á—å... </h2>
                    <div className={cls.circles}>
                        <div className={classNames(cls.circle, {}, [cls.firstCircle])}>
                            {
                                firstCircleCards.map((card)=>(
                                    <CircleCard className={cls.card} card={card} key={`firstCircleCard_${card.id}`} />
                                ))
                            }
                            <span className={classNames(cls.card, {}, [cls.btn])}>
                                <Button theme={ButtonTheme.BLUE}>–û–±—Å—É–¥–∏—Ç—å –¥–µ—Ç–∞–ª–∏</Button>
                            </span>
                        </div>
                        
                        <div className={classNames(cls.circle, {}, [cls.secondCircle])}>
                            {
                                scondCircleCards.map((card)=>(
                                    <CircleCard className={cls.card} card={card} key={`secondCircleCard_${card.id}`} />
                                ))
                            }
                        </div>
                    </div>


                </div>
            </div>
        </div>
    );
}